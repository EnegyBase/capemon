name: MSBuild

on:
  push:
    branches: [ "capemon" ]
  pull_request:
    branches: [ "capemon" ]

env:  
  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release
  SOLUTION_FILE_PATH: capemon.sln
  

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: x86
            platform: Win32
          - arch: x64
            platform: x64

    steps:
    - uses: actions/checkout@v3

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.1
      with: 
       vs-version: '15.0'
       msbuild-architecture: ${{ matrix.arch }}

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}
      
    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} /p:Platform=${{ matrix.platform }} ${{env.SOLUTION_FILE_PATH}}
    - uses: actions/upload-artifact@v3
      with:
        name: capemon_release_${{ matrix.arch }}
        path: |
         D:\a\capemon\capemon\Release\capemon.dll
         D:\a\capemon\capemon\x64\Release\capemon_x64.dll
